# Generated by Django 4.2.7 on 2025-09-20 06:25

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("scraper", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PageSummary",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "summary_text",
                    models.TextField(
                        help_text="Dense, information-rich summary optimized for embedding"
                    ),
                ),
                (
                    "summary_length_tokens",
                    models.PositiveIntegerField(
                        help_text="Token count of the summary text"
                    ),
                ),
                ("processing_time_ms", models.PositiveIntegerField(null=True)),
                (
                    "model_used",
                    models.CharField(
                        default="azure-openai-gpt-5",
                        help_text="LLM model used for summarization",
                        max_length=100,
                    ),
                ),
                (
                    "chunk_count",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of text chunks processed for summarization",
                    ),
                ),
                (
                    "compression_ratio",
                    models.FloatField(
                        help_text="Ratio of original content length to summary length"
                    ),
                ),
                (
                    "information_density_score",
                    models.FloatField(
                        default=0.0,
                        help_text="Estimated information density score (0-1)",
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        blank=True,
                        help_text="Path to stored summary file on disk",
                        max_length=1000,
                    ),
                ),
                (
                    "scraped_page",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="summary",
                        to="scraper.scrapedpage",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DocumentEmbedding",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "embedding_id",
                    models.CharField(
                        db_index=True,
                        help_text="Unique identifier in Milvus database",
                        max_length=255,
                    ),
                ),
                (
                    "embedding_vector",
                    models.JSONField(
                        help_text="Vector embedding data (stored as JSON for Django compatibility)"
                    ),
                ),
                (
                    "model_used",
                    models.CharField(
                        default="text-embedding-large-3",
                        help_text="Embedding model used",
                        max_length=100,
                    ),
                ),
                (
                    "vector_dimensions",
                    models.PositiveIntegerField(
                        default=3072, help_text="Dimensionality of the embedding vector"
                    ),
                ),
                ("processing_time_ms", models.PositiveIntegerField(null=True)),
                (
                    "summary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="embeddings",
                        to="scraper.pagesummary",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="pagesummary",
            index=models.Index(
                fields=["created_at"], name="scraper_pag_created_34f682_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pagesummary",
            index=models.Index(
                fields=["model_used"], name="scraper_pag_model_u_b1bf3d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="documentembedding",
            index=models.Index(
                fields=["embedding_id"], name="scraper_doc_embeddi_3385a7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="documentembedding",
            index=models.Index(
                fields=["model_used"], name="scraper_doc_model_u_11dc9c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="documentembedding",
            index=models.Index(
                fields=["created_at"], name="scraper_doc_created_2a975b_idx"
            ),
        ),
    ]
